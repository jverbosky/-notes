stylesheet.css

* specify formatting for HTML tags and then just call the tag in the HTML tag
	* for example : <h3>Ye Olde Storye</h3>
	* Will use the font-family, color and text-align config below
_________________________________________________________________________

Method 1:  Include CSS in the HTML File

1) Put a <style> tag in the head section
2) Specify the formats in the <style> section

<head>
	<style>
		p {
			color: purple;
		}
	</style>
	<title>Title</title>
</head>
_________________________________________________________________________

Method 2:  Include CSS Using a Separate File

1) Put a <link> tag in the head section
2) A type attribute should always be "text/css"
3) A rel attribute should always be "stylesheet"
4) A href attribute should point to the web address of the CSS file

<head>

	<link type="text/css" rel="stylesheet" href="stylesheet.css"/>

	<title>Title</title>

</head>
_________________________________________________________________________

Syntax

selector {
	property: value;
}
_________________________________________________________________________

Examples

p {
	font-family: Garamond;
	font-size: 16px;
	font-weight: bold;
}

h3 {
	font-family: cursive;
	color: #36648b;
	text-align: center;
}

span {
	color: #cc0000;
	font-size: 24px;
}

img {
	width: 100px;
	height: 100px;
}

table, td {
	border: 1px #70b8ff dashed;
}

span {
	background-color: yellow;
}


_________________________________________________________________________

Comments
/* This is a comment in CSS */
_________________________________________________________________________

Colors (hex color palette, hex color picker)

black			#000000
white			#FFFFFF
red			#CC6666
red			#CC0000
blue			#8A2BE2
blue			#0000CD
maroon			#881C62
coral			#FF7256
goldenrod		#FFC125
sea green		#54FF9F
flouresent green	#00FF00
royal blue		#530EE8
plum			#8B668B
_________________________________________________________________________

Fonts (Built-In Defaults)
serif
sans-serif
cursive
_________________________________________________________________________

Fonts (Best Effort - first to last)
h1 {
	font-family: Times, serif;
}

h2 {
	font-family: Verdana, sans-serif;

h3 {
	font-family: Vivaldi, cursive;
}
_________________________________________________________________________

Div (Format in CSS)
HTML:
<div> text </div>
CSS:
div {
	background-color: #CC0000;
	height :100px;
	width: 100px;
}
_________________________________________________________________________

Borders (Format in CSS)
border: 1px solid black
border: 1px dashed blue
===> solid, dashed, dotted, double

HTML:
<body>
	<table>
		<thead>
			<th colspan="3">Nine Blocks!</th>
		</thead>
		<tbody>
			<tr>
				<td></td>
				<td></td>
				<td></td>
			</tr>
			<tr>
				<td></td>
				<td></td>
				<td></td>
			</tr>
			<tr>
				<td></td>
				<td></td>
				<td></td>
			</tr>
		</tbody>
	<table>
</body>

CSS:
table {
	border: 1px solid black;
}

td {
	height: 50px;
	border: 1px dashed blue;
}
_________________________________________________________________________

Text Decoration
none - removes default underline for links
underline - adds underline

a {
	text-decoration: none
}
_________________________________________________________________________

Button
div {
	border-radius: 5px;
	border: 2px solid #6494ED;
	background-color: #BCD2EE;
	height: 50px;
	width: 120px;
	margin: auto;
	text-align: center;
}
_________________________________________________________________________

Selecting All Nested Instances of a Tag
HTML:
<div>
	<h3>
	<div>
		<h3>   <=== just this one

CSS:
div div h3 {
	color: red;
}

_________________________________________________________________________

Select All (HTML/CSS Box Model)
* {
	border: 1px dashed #3A5FCD;
}
_________________________________________________________________________

Selecting Specific Nested Instances
HTML:
<div>
	<p>text</p>
</div>

CSS:
div > p {
	color: red
}
_________________________________________________________________________

Overriding Styles
* More specific selectors will override more general ones

ul li p {  
	> will override styles specified by only:
p {
_________________________________________________________________________

Classes and IDs
* Classes are useful when you have a bunch of elements that should all have the same formatting
* IDs are for when you have exactly 1 element that should have a unique formatting
* A selector can have a class and an ID assigned - just put a space between them
	* <p class="red" id="rogue">

HTML:
<h3 class="red">This text is red.</h3>
<p id="rogue">This text is not.</p>

CSS:
.red {
	color: red;
}

#rogue {
	color: blue;
}
_________________________________________________________________________

Pseudo-Class Selectors (Links)
* Allow control the appearance of unvisited, visited and hovered links

selector:pseudo-class_selector {
	property: value;
}

a:link > An unvisited link
a:visited > A visited link
a:hover > A link that the mouse is hovering over

HTML:
<a href="http://www.something.com">This is a typical link</a>

CSS:
a:hover {
	color: #CC0000;
	font-weight: bold;
	text-decoration: none;
}
_________________________________________________________________________

Pseudo-Class Selectors (Children)
selector:first-child > Only applies styles to elements that are the first children of their parents
selector:nth-child(#) > Only applies styles to the specified element (#)

HTML:
<div>
	<p>I'm the first child!</p>
	<p>I'm not...</p>
</div>

CSS:
p:first-child {
	color: red;
}

p:nth-child(2) {
	color: #00FF00;
}
_________________________________________________________________________

Line of Circles
HTML:
<div><p>Text</p></div>
<div><p>Text</p></div>
<div><p>Text</p></div>
<div><p>Text</p></div>
<div><p>Text</p></div>
<div><p>Text</p></div>
<div><p>Text</p></div>
<div><p>Text</p></div>

CSS:
div {
	position: relative;
	display: inline-block; > this puts them all in the same line (and resizes them as needed)
	height: 100px;
	width: 100px;
	border-radius: 100%;  > identical h/w and this make it a circle
	border: 2px solid black;
	margin-left: 5px; > this specifies the space between the circles
	margin-top: 5px;
	text-align: center;
}

div p {
	position: relative;
	margin-top: 40px;
	font-size: 12px;
}
_________________________________________________________________________

Images in Circles with Links
HTML:
<a href="http://asianwiki.com/Mitsu_Dan">
        
<div id="head" style="background-image: url(http://bgd.neowing.co.jp/ebooks/dt/dg/img/C/28/MDD10000000102816_l.jpg);"></div></a>
		
<a href="http://asianwiki.com/Mitsu_Dan">
		
<div id="body" style="background-image: url(http://bgd.neowing.co.jp/ebooks/dt/dg/img/C/28/MDD10000000102816_l.jpg);"></div></a>

CSS:
#head {

	border: 2px solid black;

	background-position: 40% 0%;
	border-radius: 50%;

	width: 120px;
	height: 120px;
	margin-left: 15px;

}



#body {

	border: 2px solid black;
	background-position: 0% 95%;

	border-radius: 50%;
	width: 120px;
	height: 120px;
	margin-top: 15px;

}
_________________________________________________________________________

Display
* block > makes the element a block box, nothing can be next to it, takes up the full width
* inline-block > makes the element a block box, but allows other elements to sit on the same line
* inline > makes the element sit on the same line as another element, but without block formatting, only uses necessary width
* none > makes the element and its content disappear completely

div {
	display: block;
}
_________________________________________________________________________

The Box Model
* margin > the space around the element, outside of the border
* border > the edge of the element, made visible by using the border property
* padding > the spacing between the content and the border
* content > the "stuff" in the box; for the <p> element, this would be the text of the paragraph
_________________________________________________________________________

Margin
* auto > puts equal left and right margins on the element
* margin-top: #px
* margin-right: #px
* margin-bottom: #px
* margin-left: #px
* margin: #px<top> #px<right> #px<bottom> #px<left>
* margin: #px > to set the same value for all four sides

div {
	margin: auto;
}

div {
	margin: 20px 50px 10px 5px;
} 

* Tip - values can be positive or negative (useful for animations?  tbd...)
_________________________________________________________________________

Border
* border: #px <type> <color>
* type > solid, dashed, double

div {
	border: 2px solid blue;
}
_________________________________________________________________________

Padding
* padding-top: #px
* padding-right: #px
* padding-bottom: #px
* padding-left: #px
* padding: #px<top> #px<right> #px<bottom> #px<left>
* padding: #px > to set the same value for all four sides

div {
	padding: 40px;
}

* Tip - padding uses the same background color as the content
_________________________________________________________________________

Float
* positions elements while preventing them from overlapping other elements
* useful for dividing page into different sections (columns)
==> left, right

div {
	float: left;
}

p {
	float: right;
}
_________________________________________________________________________

Clear
* instructs an element to move below other elements (not overlap)
==> left, right, both

HTML:
<div id="header"></div>

<div class="left"></div>
<div class="right"></div>

<div id="footer"></div>

CSS:
div {

	border-radius: 5px;

}



#header {
	
	height: 50px;
	background-color: #F38630;

	margin-bottom: 10px;

}



.left {
	
	height: 300px;

	width: 150px;
	
	background-color: #A7DBD8;
	
	float: left;
	margin-bottom: 10px;

}



.right {
	
	height: 300px;

	width: 450px;
	
	background-color: #E0E4CC;
	float: right;
	
	margin-bottom: 10px;

}



#footer {
	
	height: 50px;
	
	background-color: #69D2E7;   
	clear: both;

}
_________________________________________________________________________

Position
* static > an element's default positioning type (used if nothing else is specified)
* absolute > positions an element in relation to the first parent element that doesn't have a static position
	* if there is none, it is positioned relative to <html>
* relative > positions an element relative to where it would have been if it had the default static position
	* introduces the ability to use a z-index (depth) for the element
	* elements with a relative position will always appear on top of elements with a static position
	* also limits the scope of absolutely positioned child elements
	* any element that is a child of a relatively positioned element can be absolutely positioned within that block
* fixed > anchors an element to the browser window, even when the page is scrolled

#outer {
	position: absolute;
}

#inner {
	position: absolute;
	margin-left: 20px;
}

* Tip - see this website to completely understand the different positioning types and their results:
	http://www.barelyfitz.com/screencast/html-training/css/positioning/
_________________________________________________________________________



_________________________________________________________________________



_________________________________________________________________________



_________________________________________________________________________




_________________________________________________________________________




_________________________________________________________________________